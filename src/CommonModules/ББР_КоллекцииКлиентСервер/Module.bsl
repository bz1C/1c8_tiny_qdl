// Библиотека "быстрой" разработки на платформе 1С:Предприятие 8
// Модуль ББР_КоллекцииКлиентСервер. Версия 1.8 от 27.06.2022
// Назначение: Работа с коллекциями значений
// Автор: Чернуль Александр Владимирович. E-mail: bzero@yandex.ru
// Лицензия на использование: Freeware.

// Функция - Конструктор массива. Создает массив с указанными в параметрах элементами. Элементов должно быть не более 9.
//
// Параметры:
//  эл1		- Произвольный - Первый элемент массива.
//  эл2-9	- Произвольный (кроме Неопределено) - 2-9 элементы массива
// 
// Возвращаемое значение:
//  Массив - Массив, заполненный указанными элементами.
//
Функция СоздатьМассив(эл1, эл2 = Неопределено, эл3 = Неопределено, эл4 = Неопределено, эл5 = Неопределено, эл6 = Неопределено, эл7 = Неопределено, эл8 = Неопределено, эл9 = Неопределено) Экспорт 
	Массив = Новый Массив(1);
	Массив[0] = эл1;
	Если эл2 = Неопределено Тогда
		Возврат Массив; 
	КонецЕсли; 
	
	СтруктураЭлементов = Новый Структура(
		"эл2, эл3, эл4, эл5, эл6, эл7, эл8, эл9",
		 эл2, эл3, эл4, эл5, эл6, эл7, эл8, эл9);
	
	Для сч=2 По 9 Цикл
		ТекЭл = СтруктураЭлементов["эл"+сч];	 
		Если ТекЭл = Неопределено Тогда
			Прервать;
		КонецЕсли;
		Массив.Добавить(ТекЭл);
	КонецЦикла; 
	
	Возврат Массив; 
КонецФункции


Функция ДополнитьМассив(МассивПриемник, МассивИсточник, ПоддерживатьУникальность = Ложь) Экспорт
	Если ПоддерживатьУникальность = Ложь Тогда
		Для каждого эл Из МассивИсточник Цикл
			МассивПриемник.Добавить(эл);
		КонецЦикла; 
	Иначе
		Для каждого эл Из МассивИсточник Цикл
			ДобавитьВМассивЕслиОтсутствует(МассивПриемник, эл);
		КонецЦикла; 
	КонецЕсли; 
КонецФункции
 

Процедура ДобавитьВМассивЕслиОтсутствует(Мас, зн) Экспорт
	Если Мас.Найти(зн) = Неопределено Тогда
		Мас.Добавить(зн);
	КонецЕсли; 	
КонецПроцедуры
 

//	Мас:Массив. Преобразуемый массив.
//
//	ЗначениеСоответствия:Произвольный. Значение, записывающееся как значения соответствия. Для всех элементов коллекции это одно и то же значение.
//
//ВОЗВРАЩАЕТ
//	Соответствие.
Функция МассивВСоответствие(Мас, ЗначениеСоответствия = Неопределено) Экспорт
	Результат = Новый Соответствие;
	Для каждого эл Из Мас Цикл
		Результат.Вставить(эл, ЗначениеСоответствия);
	КонецЦикла; 
	Возврат Результат; 
КонецФункции
 
// Преобразует соответствие в массив. В ключи соответствия записываются элементы массива, в значения - параметр ЗначениеСоответствия.
//
//ПАРАМЕТРЫ
//	Соотв:Соответствие. Преобразуемое соответствие.
//
//	МассивКлючиСоответствия:Массив, Неопределено. Если передается массив, то в него записываются ключи соответствия. Если Неопределено, в него ничего не записывается.
//	МассивЗначенияСоответствия:Массив, Неопределено. Если передается массив, то в него записываются значения соответствия. Если Неопределено, в него ничего не записывается.
//
//ВОЗВРАЩАЕТ
//	Массив. Массив с ключами соответствия Соотв. Если МассивКлючиСоответствия <> Неопределено, то возврящает ссылку на МассивКлючиСоответствия. Иначе создает новый массив и возвращает его.
Функция СоответствиеВМассив(Соотв, МассивКлючиСоответствия = Неопределено, МассивЗначенияСоответствия = Неопределено) Экспорт
	Если ТипЗнч(МассивКлючиСоответствия) = Тип("Массив") Тогда
		МассивРезультат = МассивКлючиСоответствия;
		МассивРезультат.Очистить();
	Иначе 
		МассивКлючиСоответствия = Новый Массив;
		Если МассивКлючиСоответствия <> Неопределено Тогда
			МассивРезультат = МассивКлючиСоответствия;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(МассивЗначенияСоответствия) = Тип("Массив") Тогда
		МассивЗначенияСоответствия.Очистить();
	ИначеЕсли МассивКлючиСоответствия <> Неопределено Тогда
		МассивЗначенияСоответствия = Новый Массив;
	КонецЕсли;
	
	Для каждого кз Из Соотв Цикл
		МассивРезультат.Добавить(кз.Ключ);
		Если МассивЗначенияСоответствия <> Неопределено Тогда
			МассивЗначенияСоответствия.Добавить(кз.Значение);
		КонецЕсли; 
	КонецЦикла; 
	Возврат МассивРезультат; 
КонецФункции

Процедура ДополнитьКоллекцию(КоллекцияПриемник, КоллекцияИсточник, знач ТипКоллекции=Неопределено) Экспорт
	Успех = Ложь;
	Если ТипКоллекции = Неопределено Тогда
		ТипКоллекции = ТипЗнч(КоллекцияПриемник);
	КонецЕсли;
	Если ТипКоллекции = Тип("Структура") или ТипКоллекции = Тип("Соответствие") Тогда
		Для каждого кз Из КоллекцияИсточник Цикл
			КоллекцияПриемник.Вставить(кз.Ключ, кз.Значение);
		КонецЦикла; 
		Успех = Истина;
	ИначеЕсли ТипКоллекции = Тип("Массив") Тогда 	
		Для каждого з Из КоллекцияИсточник Цикл
			КоллекцияПриемник.Добавить(з);
		КонецЦикла; 
		Успех = Истина;
	ИначеЕсли ТипКоллекции = Тип("СписокЗначений") Тогда 	
		Для каждого з Из КоллекцияИсточник Цикл
			КоллекцияПриемник.Добавить(з.Значение, з.Представление,з.Пометка, з.Картинка);
		КонецЦикла; 
		Успех = Истина;
	КонецЕсли; 
	
#Если ТонкийКлиент или ВебКлиент или МобильноеПриложение или МобильноеПриложениеКлиент Тогда
#Иначе
	Если ТипКоллекции = Тип("ТаблицаЗначений") Тогда
		Для каждого стр Из КоллекцияИсточник Цикл
			НовСтр = КоллекцияПриемник.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, стр);
		КонецЦикла; 
		Успех = Истина;
	КонецЕсли; 
#КонецЕсли 

	Если не Успех Тогда
		ВызватьИсключение СтрШаблон(
			"Тип коллекции ""%1"" не поддерживается в данном режиме.",
			Строка(ТипКоллекции)
		);
	КонецЕсли; 
КонецПроцедуры
 
Функция ЗначенияКолонкиРазличны(Коллекция, ИмяКолонки) Экспорт
	Колво = Коллекция.Количество();
	Если Колво <= 1 Тогда
		Возврат Ложь; 
	КонецЕсли;
	ЗначениеПервойСтроки = Коллекция[0][ИмяКолонки]; 
	Для сч=1 По Колво-1 Цикл
		Если ЗначениеПервойСтроки <> Коллекция[сч][ИмяКолонки] Тогда
			Возврат Истина; 
		КонецЕсли; 
	КонецЦикла; 
	Возврат Ложь; 
КонецФункции

// Безопасно получает значение свойства структуры.
// Если в структуре отсутствует указанное свойство, возвращается значение по умолчанию.
//
// Параметры:
//	Структ - Структура - Структура, из которого получаем значение свойства.
//	ИмяСвойства - Строка - Имя свойства структуры Структура для получения.
//  ЗначениеПоУмолчанию - Произвольный - Значение, возвращаемое функцией при отсутствии свойства ИмяСвойства в структуре Структ.
//
//Возвращаемое значение:
//	Произвольный. Полученное значение свойства или значение по умолчанию, если свойство отсутствует.
Функция СвойствоСтруктуры(ПараметрСтруктура, ИмяСвойства, ЗначениеПоУмолчанию = Неопределено) Экспорт
	Если ПараметрСтруктура = Неопределено или ТипЗнч(ПараметрСтруктура) <> Тип("Структура") Тогда
		Возврат ЗначениеПоУмолчанию; 
	КонецЕсли; 
	
	ЗначениеСвойства = Неопределено;
	Если ПараметрСтруктура.Свойство(ИмяСвойства, ЗначениеСвойства) Тогда
		Возврат ЗначениеСвойства;
	Иначе
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли; 
КонецФункции
 
Функция КлючиСоответствияВМассив(знач Соотв) Экспорт 
	КолЭлем = Соотв.Количество();
	Если КолЭлем = 0 Тогда
		Возврат Новый Массив;
	КонецЕсли;
	Результат = Новый Массив(КолЭлем);
	ТекИндекс = 0;
	Для каждого кз Из Соотв Цикл
		Результат[ТекИндекс] = кз.Ключ;
		ТекИндекс = ТекИндекс + 1;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ЗначенияСоответствияВМассив(знач Соотв) Экспорт 
	КолЭлем = Соотв.Количество();
	Если КолЭлем = 0 Тогда
		Возврат Новый Массив;
	КонецЕсли;
	Результат = Новый Массив(КолЭлем);
	ТекИндекс = 0;
	Для каждого кз Из Соотв Цикл
		Результат[ТекИндекс] = кз.Значение;
		ТекИндекс = ТекИндекс + 1;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

// Устанавливает значение колонки табличной части или таблицы значений во всех строках
//
//ПАРАМЕТРЫ
//	ТЗ:ТаблицаЗначений, ТабличнаяЧасть. ТЗ или ТЧ для изменения
//	ИмяКолонки:Строка. Имя колонки для изменения.
//	Значение:Произвольный. Значение для установки.
Процедура ЗаполнитьЗначениемКолонку(ТЗ,ИмяКолонки,Значение) Экспорт
	Для каждого стр Из ТЗ Цикл
		стр[ИмяКолонки] = Значение; 
	КонецЦикла; 
КонецПроцедуры

// Процедура удаляет пустые значения из массива. Пустота значения проверяется ф-ией ЗначениеЗаполнено()
//
//ПАРАМЕТРЫ
//	парМассив:Массив. обрабатываемый массив.
&НаКлиенте
Процедура УдалитьПустыеЗначенияИзМассива(парМассив) Экспорт 
	инд = парМассив.ВГраница();
	Пока инд >= 0 Цикл
		Если не ЗначениеЗаполнено(парМассив[инд]) Тогда
			парМассив.Удалить(инд);
		КонецЕсли; 
		инд = инд - 1;
	КонецЦикла; 
КонецПроцедуры

// Сравнивает 2 структуры.
//
//ПАРАМЕТРЫ
//	Структ1, Структ2:Структура. Сравниваемые структуры.
//ВОЗВРАЩАЕТ
//	Булево. Истина, если структуры эквивалентны (содержат одинаковые ключи и значения). Иначе Ложь.
Функция СтруктурыРавны(Структ1, Структ2) Экспорт
	к1 = Структ1.Количествo();
	к2 = Структ2.Количествo();
	
	Если к1 <> к2 Тогда
		Возврат Ложь; 
	КонецЕсли; 
	
	зн2 = Неопределено;
	Для каждого кз Из Структ1 Цикл
		Если Структ2.Свойство(кз.Ключ, зн2) = Ложь или зн2 <> кз.Значение Тогда
			Возврат Ложь; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина; 
КонецФункции

Процедура ДобавитьЗначениеВМногоуровневоеСоответствие(знач Соотв, знач Значен, знач Ключ1, знач Ключ2, знач Ключ3 = Неопределено, знач Ключ4 = Неопределено, знач Ключ5 = Неопределено, знач Ключ6 = Неопределено, знач Ключ7 = Неопределено, знач Ключ8 = Неопределено, знач Ключ9 = Неопределено) Экспорт
	Если ТипЗнч(Соотв) <> Тип("Соответствие") Тогда
		ВызватьИсключение НСтр("ru='Неправильный тип значения параметра 1 ДобавитьЗначениеВМногоуровневоеСоответствие(). Должно быть соответствие.'");
	КонецЕсли;
	
	Если Ключ2 = Неопределено Тогда
		Соотв.Вставить(Ключ1, Значен);
		Возврат; 	
	КонецЕсли; 

	Знач1 = Соотв.Получить(Ключ1);
	
	Если Знач1 = Неопределено Тогда
		Соотв2 = Новый Соответствие;
	Иначе
		Соотв2 = Знач1;
	КонецЕсли; 
	
	ДобавитьЗначениеВМногоуровневоеСоответствие(Соотв2, Значен, Ключ2, Ключ3, Ключ4, Ключ5, Ключ6, Ключ7, Ключ8, Ключ9);
	
	Если Знач1 = Неопределено Тогда
		Соотв.Вставить(Ключ1, Соотв2);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьЗначениеМногоуровневогоСоответствия(знач Соотв, знач Ключ1, знач Ключ2, знач Ключ3 = Неопределено, знач Ключ4 = Неопределено, знач Ключ5 = Неопределено, знач Ключ6 = Неопределено, знач Ключ7 = Неопределено, знач Ключ8 = Неопределено, знач Ключ9 = Неопределено) Экспорт
	Если ТипЗнч(Соотв) <> Тип("Соответствие") Тогда
		ВызватьИсключение НСтр("ru='Неправильный тип значения параметра 1 ДобавитьЗначениеВМногоуровневоеСоответствие(). Должно быть соответствие.'");
	КонецЕсли;
	
	Знач1 = Соотв.Получить(Ключ1);
	Если Ключ2 = Неопределено Тогда
		Возврат Знач1; 	
	КонецЕсли; 
	Если Знач1 = Неопределено Тогда
		Возврат Неопределено; 
	КонецЕсли;
	
	Возврат ПолучитьЗначениеМногоуровневогоСоответствия(Знач1, Ключ2, Ключ3, Ключ4, Ключ5, Ключ6, Ключ7, Ключ8, Ключ9);
КонецФункции
