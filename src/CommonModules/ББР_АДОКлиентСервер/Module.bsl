// Библиотека "быстрой" разработки на платформе 1С:Предприятие 8
// Модуль ББР_АДОКлиентСервер. Версия 1.0 от 24.10.2018
// Назначение: Содержит функции для работы с ADO.
// Автор: Чернуль Александр Владимирович. E-mail: bzero@yandex.ru
// Лицензия на использование: Freeware.

Функция ПодключитьсяЧерезADO(знач СерверБазы, знач ИмяБазы, знач ИмяПользователя, знач Пароль) Экспорт
	DBConn=Новый COMОбъект("ADODB.Connection");	
	DBConn.ConnectionString = "driver={SQL Server};server="+СерверБазы+
	";uid="+ИмяПользователя+";pwd="+Пароль+";database="+ИмяБазы;	
	DBConn.Open();
	Возврат DBConn; 
КонецФункции // ()

Функция ВыполнитьКомандуВставки(DBConn, TableName, Выборка, знач ИсключитьКолонки="", ВозвращатьПервичныйКлюч=Истина)
	Результат=Выборка.Владелец();
	ИсключитьКолонки=","+СтрЗаменить(ИсключитьКолонки," ","")+",";
	ИмяПолей="";
	Значения="";
	Для каждого кол Из Результат.Колонки Цикл
		Если Найти(ИсключитьКолонки,","+кол.Имя+",") > 0 Тогда
			Продолжить;
		КонецЕсли;
		ИмяПолей=ИмяПолей+","+кол.Имя;
		Значения=Значения+","+ЗначениеВСтрокуДляSQL(Выборка[кол.Имя]);
	КонецЦикла;
	Если ПустаяСтрока(ИмяПолей) Тогда
		Возврат "";
	КонецЕсли;
	
	ИмяПолей=Сред(ИмяПолей,2);
	Значения=Сред(Значения,2);
	ТекстЗапроса="INSERT INTO "+TableName+" ("+ИмяПолей+") VALUES ("+Значения+")";
	
	DBConn.Execute(ТекстЗапроса);
		
	Если ВозвращатьПервичныйКлюч Тогда
		RecordSet=DBConn.Execute("SELECT @@Identity");
		RecordSet.MoveFirst();
		IdNew=RecordSet.Fields(0).Value;
		RecordSet.Close();
		
		Возврат IdNew;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
КонецФункции

Функция ЗначениеВСтрокуДляSQL(зн)
	ТипЗн=ТипЗнч(зн);
	Если ТипЗн=Тип("Число") Тогда
		Возврат Формат(зн, "ЧН=; ЧГ=");
	ИначеЕсли ТипЗн=Тип("Строка") Тогда 
		Возврат "'"+СтрЗаменить(зн,"""","""""")+"'";
	ИначеЕсли ТипЗн=Тип("Дата") Тогда 
		Возврат "'"+Формат(зн, "ДФ='yyyy-MM-dd HH:mm:ss'")+"'";
	ИначеЕсли зн=Истина Тогда 
		Возврат "true"; 
	ИначеЕсли зн=Ложь Тогда 
		Возврат "false"; 
	Иначе
		Возврат Строка(зн); 
	КонецЕсли;
КонецФункции // ЗначениеВСтрокуДляSQL(зн)

&НаСервере
Функция ВыполнитьЗапросADOИВыгрузитьРезультатВТЗ(DBConn,QueryText)
	RowSet = DBConn.Execute(QueryText);
	
	ТЗк=СоздатьСтруктуруТЗПоADORowSet(RowSet);
	
	Пока не RowSet.EOF Цикл
		ЗаполнитьЗначенияСвойствИзADO(ТЗк.Добавить(),RowSet);
		RowSet.MoveNext();
	КонецЦикла; 
	
	RowSet.Close();
    Возврат ТЗк; 
КонецФункции // ВыполнитьЗапросИВыгрузитьРезультатВТЗ()

&НаСервере
Функция СоздатьСтруктуруТЗПоADORowSet(RowSet) Экспорт
	ТЗ=Новый ТаблицаЗначений;	
	Для каждого field Из RowSet.Fields Цикл		
		ТЗ.Колонки.Добавить(field.Name, ПолучитьТипПоТипуMSSQL(field.Type,field.Precision));
	КонецЦикла; 
	Возврат ТЗ; 
КонецФункции // СоздатьСтруктуруТЗПоADORowSet(RowSet)

Функция ПолучитьТипПоТипуMSSQL(ТипАДО,ТочностьАДО) Экспорт
	МассивТипов=Новый Массив;
	КвалификаторЧисла=Неопределено;
	КвалификаторСтроки=Неопределено;
	Если ТипАДО=3 или ТипАДО=20 или ТипАДО=6 или ТипАДО=14 или ТипАДО=5 или ТипАДО=131
		или ТипАДО=4 или ТипАДО=2 или ТипАДО=16 или ТипАДО=21 или ТипАДО=19 или ТипАДО=18
		или ТипАДО=17 или ТипАДО=139 
	Тогда		
		МассивТипов.Добавить(Тип("Число"));
		КвалификаторЧисла=Новый КвалификаторыЧисла(ТочностьАДО);
	ИначеЕсли ТипАДО=11 Тогда 
		МассивТипов.Добавить(Тип("Булево"));
	ИначеЕсли ТипАДО=8 или ТипАДО=129 или ТипАДО=72 или ТипАДО=200 Тогда 
		МассивТипов.Добавить(Тип("Строка"));
		КвалификаторСтроки=Новый КвалификаторыСтроки(ТочностьАДО);
	ИначеЕсли ТипАДО=7 или ТипАДО=133 или ТипАДО=134 или ТипАДО=135 или ТипАДО=64 
		или ТипАДО=201 или ТипАДО=203 или ТипАДО=202 или ТипАДО=130 
	Тогда 		
		МассивТипов.Добавить(Тип("Дата"));
	ИначеЕсли ТипАДО=0 Тогда 
		МассивТипов.Добавить(ТипЗнч(null));
	Иначе
		МассивТипов.Добавить(Тип("Число"));
		МассивТипов.Добавить(Тип("Булево"));
		МассивТипов.Добавить(Тип("Строка"));
		МассивТипов.Добавить(Тип("Дата"));
	КонецЕсли;
	Возврат Новый ОписаниеТипов(МассивТипов,КвалификаторЧисла,КвалификаторСтроки);		
КонецФункции // ПолучитьТипПоТипуADO(()

Процедура ЗаполнитьЗначенияСвойствИзADO(стрТЗ,RowSet) Экспорт
	ТЗ=стрТЗ.Владелец();
	Для каждого field Из RowSet.Fields Цикл
		ИмяПоля=field.Name;
		Если ТЗ.Колонки.Найти(ИмяПоля) <> Неопределено Тогда
			стрТЗ[ИмяПоля]=field.Value;
		КонецЕсли; 
	КонецЦикла; 	
КонецПроцедуры

// Заполняет коллекцию Fields COM объекта ADODB.Recordset из колонок объекта (результата запроса, ТЗ, ДЗ) 
//		Для автоматического заполнения Recordset имена колонок Выборка должны иметь следующий формат
//			<ИМЯ_КОЛОНКИ_RECORDSET> - значения таких колонок копируется из Выборка в Recordset
//			_<ИМЯ_ПРОИЗВОЛЬНОЙ_КОЛОНКИ> - значения таких колонок НЕ копируются в Recordset
//			_uid_<ИМЯ_КОЛОНКИ> - в колонку <ИМЯ_КОЛОНКИ> Recordset копируется строка - внутренний идентификатор ссылочного типа,
//				хранящегося в колонке _uid_<ИМЯ_КОЛОНКИ> Выборка.
//			Для копирования колонки, начинающейся с подчеркивания, начальное подчеркивание заменяется на двойное. Т.е.
//			__<ИМЯ_КОЛОНКИ> - в колонку _<ИМЯ_КОЛОНКИ> Recordset копируется значение, хранящееся в колонке __<ИМЯ_КОЛОНКИ> Выборка.
//ПАРАМЕТРЫ
//	Recordset:COM объект ADODB.Recordset. Рекордсет с открытой таблицей в режиме добавления/изменения записи
//	Выборка:ВыборкаИзРезультатаЗапроса, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Строка с колонками, в которых находятся значения, которыми заполняются соответствующие поля Recordset 
//  КоллекцияКолонок: коллекция колонок параметра Выборка. Содержим имена колонок, из которых получаются имена колонок коллекции Fields параметра Recordset
Процедура ЗаполнитьСтрокуНабораЗаписейADOИзРезультатаЗапроса(Recordset,Выборка,КоллекцияКолонок) Экспорт
	Для каждого кол Из КоллекцияКолонок Цикл
		Значение = Выборка[кол.Имя];
		Если Лев(кол.Имя,1) <> "_" Тогда
			Recordset.Fields(кол.Имя).Value = Значение;
		ИначеЕсли Лев(кол.Имя,2) = "__" Тогда
			Recordset.Fields(Сред(кол.Имя,2)).Value = Значение;
		ИначеЕсли Лев(кол.Имя,5) = "_uid_" Тогда
			Recordset.Fields(Сред(кол.Имя,6)).Value = Строка(Значение.УникальныйИдентификатор());
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

