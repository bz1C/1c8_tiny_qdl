// Библиотека "быстрой" разработки на платформе 1С:Предприятие 8
// Модуль ББР_РаботаСМетаданными. Версия 1.1 от 07.05.2023
// Назначение: Содержит функции для работы с метаданными конфигурации.
// Зависимости: ББР_СтроковыеКлиентСервер
// Автор: Чернуль Александр Владимирович. E-mail: bzero@yandex.ru
// Лицензия на использование: Freeware.



#Область ПрограммныйИнтерфейс
Функция ПолучитьИмяПоСсылкеНаПеречисление(СсылкаНаПеречисление) Экспорт
	мдСсылки = СсылкаНаПеречисление.Метаданные();
	Результат = мдСсылки.ЗначенияПеречисления.Получить(Перечисления[мдСсылки.Имя].Индекс(СсылкаНаПеречисление)).Имя;
	Возврат Результат; 
КонецФункции
 
// Функция позволяет получить метаданные общего модуля по объекту модуля
//
// Параметры:
//  ОМ	 - ОбщийМодуль - объект общего модуля
// 
// Возвращаемое значение:
//  ОбъектМетаданных, Неопределено - метаданные общего модуля, объект которого передан в параметре ОМ. 
//		В случае, если общий модуль не найден, возвращается Неопределено.
//
Функция МетаданныеОбщегоМодуля(ОМ) Экспорт
    Для Каждого ОбъектМетаданных Из Метаданные.ОбщиеМодули Цикл
    	УстановитьБезопасныйРежим(Истина);
        Если Вычислить(ОбъектМетаданных.Имя) = ОМ Тогда
            Возврат ОбъектМетаданных;
        КонецЕсли;
    КонецЦикла;
	Возврат Неопределено; 
КонецФункции

// Определяет, есть ли у объекта указанный реквизит
//
// Внешние зависимости: ББР_СтроковыеКлиентСервер.ПроверитьПолучитьЧислоИзСтроки()
// Параметры:
//  МетаданныеОбъекта - ОбъектМетаданных - Метаданные прикладного объекта
//  ИмяРеквизита - Строка - Имя реквизита для проверки его наличия в объекте или ссылке на объект
// 
// Возвращаемое значение:
//  Булево - Есть реквизит объекта
Функция ЕстьРеквизитОбъекта(МетаданныеОбъекта, ИмяРеквизита) Экспорт
	ИмяТипа = СтрРазделить(МетаданныеОбъекта.ПолноеИмя(),".")[0];
	мдРеквизит = NULL;
	Возврат СуществуетРеквизитОбъекта(МетаданныеОбъекта, ИмяТипа, "", ИмяРеквизита, Истина, мдРеквизит);
КонецФункции
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Вспомогательная функция для определения, существует ли реквизит объекта.
//
// Внешние зависимости: ББР_СтроковыеКлиентСервер.ПроверитьПолучитьЧислоИзСтроки()
// Параметры:
//  мдОбъекта - ОбъектМетаданных - Метаданные прикладного объекта
//  ИмяТипа - Строка - Имя типа прикладного объекта ("Справочник", "Документ" и т.д.)
//  ИмяТЧ - Строка - Имя табличной части, в которой проверяем наличие реквизита
//  ИмяРеквизита - Строка - Имя реквизита для проверки его наличия в объекте или ссылке на объект
//  ТолькоЧтение - Булево - Если Истина, то учитываются также реквизиты, доступные только для чтения, если Ложь, то учитываются только реквизиты, которые можно и читать и писать.
//  мдРеквизит - Null - Мд реквизит
// 
// Возвращаемое значение:
//  Булево - Существует реквизит объекта
Функция СуществуетРеквизитОбъекта(знач мдОбъекта, знач ИмяТипа, знач ИмяТЧ, знач ИмяРеквизита, ТолькоЧтение = Ложь, мдРеквизит = NULL)
	ИмяРеквизита = ВРег(ИмяРеквизита);
	ИмяТипа = ВРег(ИмяТипа);
	
	// у перечислений нет реквизитов
	Если СтрСравнить(ИмяТипа, "Перечисление") = 0 Тогда
		Возврат Ложь; 
	КонецЕсли;
		
	Если ПустаяСтрока(ИмяТЧ) Тогда
		// реквизиты есть у любого типа. И они не могут быть балансовыми
		мдРеквизит = мдОбъекта.Реквизиты.Найти(ИмяРеквизита);
		Если мдРеквизит <> Неопределено Тогда
			Возврат Истина; 
		КонецЕсли;
	КонецЕсли; 
	
	ЭтоСтандартныйРеквизит = Ложь;
	
	// сюда попадаем, если это не ТЧ
	РегистрИмеетПериод = Неопределено;
    РегистрПодчиненРегистратору = Неопределено;
    ЭтоРегистрБухгалтерии = Неопределено;
	ЭтоРегистрНакопления = Неопределено;
	Если ПолучитьАтрибутыРегистра(ИмяТипа, мдОбъекта, РегистрИмеетПериод, РегистрПодчиненРегистратору, ЭтоРегистрБухгалтерии, ЭтоРегистрНакопления,) Тогда
		// все регистры (РЕГИСТРСВЕДЕНИЙ, РЕГИСТРНАКОПЛЕНИЯ, РЕГИСТРБУХГАЛТЕРИИ, РЕГИСТРРАСЧЕТА)
		
		Если РегистрИмеетПериод и ИмяРеквизита = "ПЕРИОД" Тогда
			ЭтоСтандартныйРеквизит = Истина;	
		
		ИначеЕсли РегистрПодчиненРегистратору и (ИмяРеквизита = "РЕГИСТРАТОР" или ИмяРеквизита = "АКТИВНОСТЬ") Тогда
			ЭтоСтандартныйРеквизит = Истина;
		ИначеЕсли ЭтоРегистрНакопления и ИмяРеквизита = "ВИДДВИЖЕНИЯ" Тогда
			ЭтоСтандартныйРеквизит = мдОбъекта.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки;
		КонецЕсли; 
		
		Если не ЭтоСтандартныйРеквизит Тогда
			// измерения. Для регистра бухгалтерии берем только балансовые измерения
			мдРеквизит = мдОбъекта.Измерения.Найти(ИмяРеквизита);
			Если мдРеквизит <> Неопределено и (ЭтоРегистрБухгалтерии = Ложь или мдРеквизит.Балансовый = Истина) Тогда
				Возврат Истина; 
			КонецЕсли; 
			// ресурсы. Для регистра бухгалтерии берем только балансовые ресурсы
			мдРеквизит = мдОбъекта.Ресурсы.Найти(ИмяРеквизита);
			Если мдРеквизит <> Неопределено и (ЭтоРегистрБухгалтерии = Ложь или мдРеквизит.Балансовый = Истина) Тогда
				Возврат Истина; 
			КонецЕсли; 

			Если ЭтоРегистрБухгалтерии Тогда
				// измерения. Для регистра бухгалтерии берем только балансовые измерения
				// балансовые измерения 
				Если СтрНайти("|ДТ|КТ|","|"+Прав(ИмяРеквизита, 2)+"|") > 0 Тогда
					ИмяРеквизитаБезПостфикса = Лев(ИмяРеквизита, СтрДлина(ИмяРеквизита)-2);
					Если СтрСравнить(ИмяРеквизитаБезПостфикса, "Счет") = 0 Тогда
						ЭтоСтандартныйРеквизит = Истина; 
					ИначеЕсли СтрНачинаетсяС(ИмяРеквизитаБезПостфикса, "СУБКОНТО") Тогда
						СтрНомерСубконто = Сред(ИмяРеквизитаБезПостфикса, 9);
						НомерСубконто = 0;
						Если ББР_СтроковыеКлиентСервер.ПроверитьПолучитьЧислоИзСтроки(НомерСубконто, СтрНомерСубконто) и НомерСубконто > 0 и НомерСубконто <= мдОбъекта.ПланСчетов.МаксКоличествоСубконто Тогда
							ЭтоСтандартныйРеквизит = Истина;
						КонецЕсли;
					КонецЕсли; 
					
					Если не ЭтоСтандартныйРеквизит Тогда
						мдРеквизит = мдОбъекта.Ресурсы.Найти(ИмяРеквизитаБезПостфикса);
						Если мдРеквизит <> Неопределено и мдРеквизит.Балансовый = Ложь Тогда
							Возврат Истина; 
						КонецЕсли;
						мдРеквизит = мдОбъекта.Ресурсы.Найти(ИмяРеквизитаБезПостфикса);
						Если мдРеквизит <> Неопределено и мдРеквизит.Балансовый = Ложь Тогда
							Возврат Истина; 
						КонецЕсли; 
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;
			
			// регистр расчета не обрабатываем на данный момент
		КонецЕсли;
		
		Если ЭтоСтандартныйРеквизит Тогда
			Если мдРеквизит <> NULL Тогда
				мдРеквизит = ПолучитьСтандартныйРеквизит(мдОбъекта, ИмяРеквизита);
			КонецЕсли; 
			Возврат Истина; 
		КонецЕсли;
		
	КонецЕсли;
	
	// объектный тип
	
	// у объектного типа всегда могут быть ТЧ
	Если ЗначениеЗаполнено(ИмяТЧ) Тогда
		// проверяем, что данная ТЧ есть у объекта
		мдТЧ = мдОбъекта.ТабличныеЧасти.Найти(ИмяТЧ);
		Если мдТЧ = Неопределено Тогда
			Возврат Ложь; 
		КонецЕсли; 
		
		Возврат мдТЧ.Реквизиты.Найти(ИмяРеквизита) <> Неопределено;
	КонецЕсли; 
	
	
	// объектный тип, не ТЧ
	Если ИмяРеквизита = "ССЫЛКА" ИЛИ ИмяРеквизита = "ПОМЕТКАУДАЛЕНИЯ" Тогда
		ЭтоСтандартныйРеквизит = Истина;
		
	// у проверяем, если есть предопределенные
	ИначеЕсли (ИмяРеквизита = "ИМЯПРЕДОПРЕДЕЛЕННЫХДАННЫХ" или ТолькоЧтение и ИмяРеквизита = "ПРЕДОПРЕДЕЛЕННЫЙ") 
		И СтрНайти("|СПРАВОЧНИК|ПЛАНВИДОВХАРАКТЕРИСТИК|ПЛАНСЧЕТОВ|ПЛАНВИДОВРАСЧЕТА|","|"+ИмяТипа+"|") > 0 
	Тогда
		ЭтоСтандартныйРеквизит = Истина;
	ИначеЕсли СтрНайти("|СПРАВОЧНИК|ПЛАНВИДОВХАРАКТЕРИСТИК|ПЛАНСЧЕТОВ|ПЛАНВИДОВРАСЧЕТА|ПЛАНОБМЕНА|","|"+ИмяТипа+"|") > 0 Тогда
		// объекты, у которых есть код и наименование
		Если ИмяРеквизита = "КОД" Тогда
			ЭтоСтандартныйРеквизит = мдОбъекта.ДлинаКода  > 0; 
		ИначеЕсли ИмяРеквизита = "НАИМЕНОВАНИЕ" Тогда 
			ЭтоСтандартныйРеквизит = мдОбъекта.ДлинаНаименования  > 0; 
		КонецЕсли;
	ИначеЕсли СтрНайти("|ДОКУМЕНТ|ЗАДАЧА|БИЗНЕСПРОЦЕСС|","|"+ИмяТипа+"|") > 0 Тогда 	
		Если ИмяРеквизита = "НОМЕР" Тогда
			ЭтоСтандартныйРеквизит = мдОбъекта.ДлинаНомера > 0; 
		ИначеЕсли ИмяРеквизита = "ДАТА" Тогда 
			ЭтоСтандартныйРеквизит = Истина; 
		КонецЕсли;
	КонецЕсли;
	
	
	Если ЭтоСтандартныйРеквизит Тогда
		Если мдРеквизит <> NULL Тогда
			мдРеквизит = ПолучитьСтандартныйРеквизит(мдОбъекта, ИмяРеквизита);
		КонецЕсли; 
		Возврат Истина; 
	КонецЕсли; 
	
	// Индивидуальные особенности разных типов
	Если ИмяТипа = "СПРАВОЧНИК" или ИмяТипа = "ПЛАНВИДОВХАРАКТЕРИСТИК" Тогда 	
		ЭтоСправочник = (ИмяТипа = "СПРАВОЧНИК");
		
		// стандартные реквизиты
		Если ИмяРеквизита = "РОДИТЕЛЬ" Тогда 
			ЭтоСтандартныйРеквизит = мдОбъекта.Иерархический;
		ИначеЕсли ИмяРеквизита = "ЭТОГРУППА" Тогда
			Если ЭтоСправочник Тогда
				ЭтоСтандартныйРеквизит = мдОбъекта.Иерархический и мдОбъекта.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов;
			Иначе
				ЭтоСтандартныйРеквизит = мдОбъекта.Иерархический;
			КонецЕсли;
		ИначеЕсли ИмяРеквизита = "ВЛАДЕЛЕЦ" Тогда
			ЭтоСтандартныйРеквизит = ЭтоСправочник и мдОбъекта.Владельцы.Количество() > 0;
		КонецЕсли; 
		
	ИначеЕсли ИмяТипа = "ДОКУМЕНТ" Тогда
		// стандартные реквизиты
		Если ИмяРеквизита = "ПРОВЕДЕН" Тогда 
			ЭтоСтандартныйРеквизит = мдОбъекта.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить; 
		КонецЕсли; 
	ИначеЕсли ИмяТипа = "ПЛАНСЧЕТОВ" Тогда 	
		Если ИмяРеквизита = "КОД" Тогда
			ЭтоСтандартныйРеквизит = мдОбъекта.ДлинаКода  > 0; 
		ИначеЕсли ИмяРеквизита = "НАИМЕНОВАНИЕ" Тогда 
			ЭтоСтандартныйРеквизит = мдОбъекта.ДлинаНаименования  > 0; 
		ИначеЕсли СтрНайти("|ПОРЯДОК|РОДИТЕЛЬ|ВИД|ЗАБАЛАНСОВЫЙ|", "|"+ИмяРеквизита+"|") Тогда 
			ЭтоСтандартныйРеквизит = Истина;
		КонецЕсли;	
			
		Если не ЭтоСтандартныйРеквизит Тогда
			мдРеквизит = мдОбъекта.ПризнакиУчета.Найти(ИмяРеквизита);
			Если мдРеквизит <> Неопределено Тогда
				Возврат Истина; 
			КонецЕсли; 
			мдРеквизит = мдОбъекта.ПризнакиУчетаСубконто.Найти(ИмяРеквизита);
			Если мдРеквизит <> Неопределено Тогда
				Возврат Истина; 
			КонецЕсли; 
		КонецЕсли; 
		
	ИначеЕсли ИмяТипа = "ПЛАНВИДОВРАСЧЕТА" Тогда
		Если ИмяРеквизита = "ПЕРИОДДЕЙСТВИЯБАЗОВЫЙ" Тогда 
			ЭтоСтандартныйРеквизит = мдОбъекта.ИспользованиеПериодаДействия; 
		КонецЕсли; 
	ИначеЕсли ИмяТипа = "БИЗНЕСПРОЦЕСС" Тогда
		Если СтрНайти("|ВЕДУЩАЯЗАДАЧА|СТАРТОВАН|ЗАВЕРШЕН|", "|"+ИмяРеквизита+"|") Тогда 
			ЭтоСтандартныйРеквизит = Истина;
		КонецЕсли;
	ИначеЕсли ИмяТипа = "ЗАДАЧА" Тогда
		Если ИмяРеквизита = "НАИМЕНОВАНИЕ" Тогда 
			ЭтоСтандартныйРеквизит = мдОбъекта.ДлинаНаименования  > 0;
		ИначеЕсли ИмяРеквизита = "ВЫПОЛНЕНА" Тогда 
			ЭтоСтандартныйРеквизит = Истина;
		ИначеЕсли ИмяРеквизита = "БИЗНЕСПРОЦЕСС" или ИмяРеквизита = "ТОЧКАМАРШРУТА" Тогда
			Для каждого мдБП Из Метаданные.БизнесПроцессы Цикл
				Если мдБП.Задача = мдОбъекта Тогда
					ЭтоСтандартныйРеквизит = Истина;
					Прервать;
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли;
		
		Если не ЭтоСтандартныйРеквизит Тогда
			мдРеквизит = мдОбъекта.РеквизитыАдресации.Найти(ИмяРеквизита);
			Если мдРеквизит <> Неопределено Тогда
				Возврат Истина; 
			КонецЕсли; 
		КонецЕсли; 
	ИначеЕсли ИмяТипа = "ПЛАНОБМЕНА" Тогда
		Если ТолькоЧтение и ИмяРеквизита = "ЭТОТУЗЕЛ" Тогда
			ЭтоСтандартныйРеквизит = Истина;
		ИначеЕсли СтрНайти("|НОМЕРОТПРАВЛЕННОГО|НОМЕРПРИНЯТОГО|", "|"+ИмяРеквизита+"|") Тогда 
			ЭтоСтандартныйРеквизит = Истина;
		КонецЕсли;
	Иначе
		// данный тип не поддерживается
		Возврат Ложь; 
	КонецЕсли; 
	
	Если ЭтоСтандартныйРеквизит Тогда
		Если мдРеквизит <> NULL Тогда
			мдРеквизит = ПолучитьСтандартныйРеквизит(мдОбъекта, ИмяРеквизита);
		КонецЕсли; 
		Возврат Истина; 
	КонецЕсли; 
	
	// еще может быть общий реквизит
	Если Метаданные.ОбщиеРеквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
		мдРеквизит = Метаданные.ОбщиеРеквизиты[ИмяРеквизита];
		ЭлементСостава = мдРеквизит.Состав.Найти(мдОбъекта);
		Если ЭлементСостава = Неопределено Тогда
			Возврат Ложь; 
		КонецЕсли;
		Если ЭлементСостава.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать 
			или ЭлементСостава.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Авто 
				и мдРеквизит.АвтоИспользование = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита.Использовать 
		Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;  
		КонецЕсли; 
	КонецЕсли;
	Возврат Ложь;
КонецФункции 

Функция ПолучитьАтрибутыРегистра(Знач ИмяТипа, Знач мдОбъекта, РегистрИмеетПериод, РегистрПодчиненРегистратору, ЭтоРегистрБухгалтерии, ЭтоРегистрНакопления, ЭтоРегистрСведений)
	ИмяТипа = ВРег(ИмяТипа);
	РегистрИмеетПериод = Ложь;
	РегистрПодчиненРегистратору = Ложь;
	ЭтоРегистрБухгалтерии = Ложь;
	ЭтоРегистрНакопления = Ложь;
	ЭтоРегистрСведений = Ложь;

	Если не СтрНачинаетсяС(ВРег(ИмяТипа), "РЕГИСТР") Тогда
		Возврат Ложь; 
	КонецЕсли; 
	
	ЭтоРегистрНакопления = (ИмяТипа="РЕГИСТРНАКОПЛЕНИЯ");
	ЭтоРегистрБухгалтерии = (ИмяТипа="РЕГИСТРБУХГАЛТЕРИИ");
	ЭтоРегистрСведений = (ИмяТипа="РЕГИСТРСВЕДЕНИЙ");
	
	Если мдОбъекта <> Неопределено Тогда
		РегистрПодчиненРегистратору = (ЭтоРегистрСведений = Ложь) или (мдОбъекта.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору);
		РегистрИмеетПериод = ЭтоРегистрНакопления 
			или ЭтоРегистрБухгалтерии 
			или ЭтоРегистрСведений и (мдОбъекта.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический);
	КонецЕсли; 
		
	Возврат Истина; 
КонецФункции 

Функция ПолучитьСтандартныйРеквизит(мдОбъекта, ИмяРеквизита)
	стдРекв = Неопределено;
	Попытка
		стдРекв = мдОбъекта.СтандартныеРеквизиты[ИмяРеквизита]; 
	Исключение
	КонецПопытки; 
	Возврат стдРекв;
	
	//Для каждого стдРекв Из мдОбъекта.СтандартныеРеквизиты Цикл
	//	Если СтрСравнить(стдРекв.Имя, ИмяРеквизита) = 0 Тогда
	//		Возврат стдРекв; 
	//	КонецЕсли;  
	//КонецЦикла; 
	//Возврат Неопределено; 
КонецФункции 

  
#КонецОбласти
