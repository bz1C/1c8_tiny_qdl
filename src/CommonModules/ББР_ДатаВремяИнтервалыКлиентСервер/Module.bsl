// Библиотека "быстрой" разработки на платформе 1С:Предприятие 8
// Модуль ББР_ДатаВремяИнтервалыКлиентСервер. Версия 1.5 от 03.11.2020
// Назначение: Содержит функции для работы с датой, временем и временными интервалами.
// Автор: Чернуль Александр Владимирович. E-mail: bzero@yandex.ru
// Зависимости: Отсутствуют.
// Лицензия на использование: Freeware.


&НаСервере
Процедура ОбъединитьПериоды(ТаблицаПериодов) Экспорт
	Для каждого стр Из ТаблицаПериодов Цикл
		Если стр.Дата1 = '00010101' и стр.Дата2 = '00010101' Тогда
			ТаблицаПериодов.Очистить();
			СтрокаПериод = ТаблицаПериодов.Добавить();
			СтрокаПериод.Дата1 = '00010101';
			СтрокаПериод.Дата2 = '00010101';
			Возврат; 
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаПериодовДляОбработки = ТаблицаПериодов.Скопировать();
	ТаблицаПериодовДляОбработки.Сортировать("Дата1, Дата2");
	ТаблицаПериодов.Очистить();
	
	ТекСтрока = Неопределено;
	Для каждого стр Из ТаблицаПериодовДляОбработки Цикл
		Если не ПериодКорректен(стр.Дата1, стр.Дата2) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрока = Неопределено Тогда
			ТекСтрока = ТаблицаПериодов.Добавить();
			ЗаполнитьЗначенияСвойств(ТекСтрока, стр);
			Продолжить;
		КонецЕсли;
		
		Если ПериодыПересекаются(ТекСтрока.Дата1, ТекСтрока.Дата2, стр.Дата1, стр.Дата2) 
			или ТекСтрока.Дата2 <> '00010101' и ТекСтрока.Дата2+1 = стр.Дата1 
		Тогда
			// продолжаем текущий период
			ТекСтрока.Дата2 = МаксимумДатыОкончания(стр.Дата2, ТекСтрока.Дата2);
		Иначе
			// открываем следующий период
			ТекСтрока = ТаблицаПериодов.Добавить();
			ЗаполнитьЗначенияСвойств(ТекСтрока, стр);
		КонецЕсли;
		
		Если ТекСтрока.Дата2 = '00010101' Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПредставлениеПериодов(ТаблицаПериодов) Экспорт
	МассивПредставлений = Новый Массив;
	Для каждого стр Из ТаблицаПериодов Цикл
		МассивПредставлений.Добавить(ПредставлениеПериода(стр.Дата1, стр.Дата2));
	КонецЦикла; 
	Возврат СтрСоединить(МассивПредставлений, ", "); 
КонецФункции
 
Функция ПериодыПересекаются(знач Период1Начало, знач Период1Конец, знач Период2Начало, знач Период2Конец) Экспорт
	Пересечение1 = Макс(Период1Начало, Период2Начало);
	Пересечение2 = МинимумДатыОкончания(Период1Конец, Период2Конец);
	Если Пересечение1 = '00010101' или Пересечение2 = '00010101' Тогда
		Возврат Истина; 
	Иначе
		Возврат Пересечение1 <= Пересечение2; 
	КонецЕсли;
КонецФункции

Функция МинимумДатыОкончания(знач Дата1, знач Дата2) Экспорт
	Если Дата1 = '00010101' Тогда
		Возврат Дата2;
	ИначеЕсли Дата2 = '00010101' Тогда 
		Возврат Дата1;
	Иначе
		Возврат Мин(Дата1, Дата2); 
	КонецЕсли; 
КонецФункции
 
Функция МаксимумДатыОкончания(знач Дата1, знач Дата2) Экспорт
	Если Дата1 = '00010101' Тогда
		Возврат Дата1;
	ИначеЕсли Дата2 = '00010101' Тогда 
		Возврат Дата2;
	Иначе
		Возврат Макс(Дата1, Дата2); 
	КонецЕсли; 
КонецФункции

Функция ПериодКорректен(знач Дата1, знач Дата2) Экспорт
	Если Дата1 = '00010101' или Дата2 = '00010101' Тогда
		Возврат Истина;
	Иначе
		Возврат Дата1 <= Дата2; 
	КонецЕсли; 
КонецФункции

Функция ЭтоПодпериодПериода(знач Дата1Период, знач Дата2Период, знач Дата1Подпериод, знач Дата2Подпериод) Экспорт 
	Если Дата1Период <> '00010101' и Дата1Период > Дата1Подпериод Тогда
		Возврат Ложь; 
	КонецЕсли;
	
	Если Дата2Период <> '00010101' и (Дата2Период < Дата2Подпериод или Дата2Подпериод = '00010101') Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат Истина;
КонецФункции


Функция ЭтоОткрытыйПериод(знач Дата1, знач Дата2) Экспорт
	Возврат Дата1='00010101' или Дата2='00010101'; 
КонецФункции
 

// Функция возвращает дату, увеличенную на указанное число дней (<ВремДата> + <КолвоДней> дн.)
Функция ДобавитьДней(ВремДата,КолвоДней) Экспорт
	Возврат (ВремДата + КолвоДней*60*60*24);	
КонецФункции 

// Функция возвращает полное количество месяцев между датами Дата1 и Дата2. Если ВключаяГраницу = Истина, то Дата2 включается в интервал, если Ложь, то нет.
// В параметре Остаток возвращается количество секунд, не попавших в последний полный месяц (без учета границы).
Функция КолМесяцев(знач Дата1, знач Дата2, знач ВключаяГраницу = Истина, Остаток = Неопределено) Экспорт
	Если Дата1 >= Дата2 Тогда
		Остаток = Дата2-Дата1;
		Возврат 0; 
	КонецЕсли;
	
	Лет = Год(Дата2)-Год(Дата1);
	Если Лет > 1 Тогда
		КолМес = 12*(Лет-1);
		ТекДата = ДобавитьМесяц(Дата1, КолМес);
	Иначе
		КолМес = 0;
		ТекДата = Дата1;
	КонецЕсли;
	
	Пока Истина Цикл
		НовыйТекДата = ДобавитьМесяц(ТекДата, 1);

		Если ВключаяГраницу = Истина Тогда
			Если НовыйТекДата > Дата2 Тогда
				Остаток = Дата2-ТекДата;
				Возврат КолМес; 
			КонецЕсли; 
		Иначе
			Если НовыйТекДата >= Дата2 Тогда
				Остаток = Дата2-ТекДата;
				Возврат КолМес; 
			КонецЕсли; 
		КонецЕсли; 
		КолМес = КолМес + 1;
		ТекДата = НовыйТекДата;
	КонецЦикла; 
КонецФункции

Функция ПринадлежитПериоду(знач ТестируемаяДата, знач Дата1, знач Дата2) Экспорт 
	Если ТестируемаяДата >= Дата1 и (Дата2 >= ТестируемаяДата или Дата2='00010101') Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;
	КонецЕсли; 
КонецФункции
 
// Процедура - проверяет период на корректность при изменении даты. В случае, если после изменения ИзмененнаяДата период становится некорректным,
//	ДатаДляСравнения изменятся так, чтобы восстановить корректность периода.
// Параметры:
//  ИзмененнаяДата					 - Дата, Число - дата (одна из границ периода), которую изменили.
//  ДатаДляСравнения				 - Дата, Число - дата (другая граница периода), которую нужно проверить на корректность периода.
//  ДатаДляСравненияДолжнаБытьБольше - Булево - Истина, если ДатаДляСравнения должна быть больше или равна ИзмененнаяДата. Ложь, если ДатаДляСравнения должна быть меньше или равна ИзмененнаяДата.
//
Процедура ОбработатьИзменениеДатыПериода(знач ИзмененнаяДата, ДатаДляСравнения, знач ДатаДляСравненияДолжнаБытьБольше) Экспорт 
	Если не (ИзмененнаяДата > ДатаДляСравнения и ДатаДляСравненияДолжнаБытьБольше = Ложь или ИзмененнаяДата < ДатаДляСравнения и ДатаДляСравненияДолжнаБытьБольше)  Тогда
		ДатаДляСравнения = ИзмененнаяДата;
	КонецЕсли; 
КонецПроцедуры
 
