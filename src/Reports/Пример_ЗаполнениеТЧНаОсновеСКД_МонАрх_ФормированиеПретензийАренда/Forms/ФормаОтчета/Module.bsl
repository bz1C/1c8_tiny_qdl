
&НаКлиенте
Процедура ЗаполнитьЗадолженность(Команда)
	ЗаполнитьЗадолженностьНаСервере();
	ЗадолженностьПриАктивизацииСтроки(Элементы.Задолженность);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадолженностьНаСервере()
	Если не ПроверитьЗаполнение() Тогда
		Возврат; 
	КонецЕсли; 
	
	Настройки = Отчет.КомпоновщикНастроек.ПолучитьНастройки();
	
	ББР_СКД.УстановитьЗначенияПараметра(Настройки, "Дата", Отчет.ДатаФормирования);
	
	ББР_СКД.УстановитьЗначенияПараметра(
		Настройки, 
		"СчетаВзаиморасчетов", 
		ББР_КоллекцииКлиентСервер.СоздатьМассив(
			ПланыСчетов.Хозрасчетный.РасчетыСПокупателями, //62.01,
			ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным, //60.02
			ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами //76.09
		)
	);
	
	МакетКомпоновки = ББР_СКД.ПолучитьМакетКомпоновки(
		Отчеты.ис_ФормированиеПретензийАренда.ПолучитьМакет("МакетПолученияЗадолженности"+Отчет.РежимФормирования),
		Настройки,
		Истина
	);
	
	ДеревоРезультата = ББР_СКД.ВыполнитьВКоллекциюЗначений(МакетКомпоновки, Истина);
	
	Если Отчет.РежимФормирования="БУ" Тогда
		ДокументыДляПолучения = Новый Массив;
		Для каждого стрЗадолженность Из ДеревоРезультата.Строки Цикл
			Для каждого стрРасшифровкаЗадолженности Из стрЗадолженность.Строки Цикл
				Если Отчет.РежимФормирования="БУ" Тогда
					ДокументыДляПолучения.Добавить(стрРасшифровкаЗадолженности.ДокументРасчетов);	
				КонецЕсли; 
			КонецЦикла; 
		КонецЦикла;
		СоответствиеДокументДата = ББР_ПолучениеДанных.ЗначенияРеквизитаОбъектовРазныхТаблиц(ДокументыДляПолучения, "Дата", Истина);
	КонецЕсли;
	
	Отчет.Задолженность.Очистить();
	Отчет.РасшифровкаЗадолженности.Очистить();
	Для каждого стрЗадолженность Из ДеревоРезультата.Строки Цикл
		НовСтрЗадолженность = Отчет.Задолженность.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрЗадолженность, стрЗадолженность);
		Для каждого стрРасшифровкаЗадолженности Из стрЗадолженность.Строки Цикл
			НовСтрРасшифровкаЗадолженности = Отчет.РасшифровкаЗадолженности.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрРасшифровкаЗадолженности, стрРасшифровкаЗадолженности);
			Если Отчет.РежимФормирования="БУ" Тогда
				Если ЗначениеЗаполнено(стрРасшифровкаЗадолженности.ДокументРасчетов) Тогда
					НовСтрРасшифровкаЗадолженности.Период = НачалоМесяца(СоответствиеДокументДата[стрРасшифровкаЗадолженности.ДокументРасчетов]);	
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	
	Если Отчет.РежимФормирования="БУ" Тогда
		тзРасшифровкаЗадолженностиДляСвертки = Отчет.РасшифровкаЗадолженности.Выгрузить();
		тзРасшифровкаЗадолженностиДляСвертки.Свернуть(
			"Договор, Услуга, Период, СтавкаНДС",
			"СуммаЗадолженности, СуммаНачисления"
		);
		тзРасшифровкаЗадолженностиДляСвертки.Сортировать("Услуга, Период, СтавкаНДС");
		Отчет.РасшифровкаЗадолженности.Загрузить(тзРасшифровкаЗадолженностиДляСвертки);
	КонецЕсли; 
	
	Если Отчет.Задолженность.Количество() > 0 Тогда
		ИдТекСтроки = Отчет.Задолженность[0].ПолучитьИдентификатор();
	Иначе
		ИдТекСтроки = Неопределено;
	КонецЕсли; 
	
	Элементы.Задолженность.ТекущаяСтрока = ИдТекСтроки;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.ДатаФормирования = ТекущаяДатаСеанса();
	Отчет.РежимФормирования = "БУ";
КонецПроцедуры

&НаКлиенте
Процедура ЗадолженностьПриАктивизацииСтроки(Элемент)
	ТекСтр = Элемент.ТекущиеДанные;
	Если ТекСтр = Неопределено Тогда
		ДоговорОтбор = Неопределено;
	Иначе
		ДоговорОтбор = ТекСтр.Договор;
	КонецЕсли; 
	Элементы.РасшифровкаЗадолженности.ОтборСтрок = Новый ФиксированнаяСтруктура("Договор", ДоговорОтбор);
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаЗадолженностиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока и не Копирование Тогда
		ТекСтр = Элементы.Задолженность.ТекущиеДанные;
		Если ТекСтр <> Неопределено Тогда
			Элемент.ТекущиеДанные.Договор = ТекСтр.Договор;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СформироватьБланки(Команда)
	СформироватьБланкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьБланкиНаСервере()
	Если Отчет.Задолженность.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст 		= НСтр("ru='Отсутствуют договоры, для формирования печатных форм.'");
		Сообщение.Поле 			= "Задолженность";
		Сообщение.ПутьКДанным 	= "Отчет";
		Сообщение.Сообщить();
		Возврат; 
	КонецЕсли; 
		
	Элементы.вклПретензии.Видимость = Отчет.ФормироватьПретензии;
	Элементы.вклУведомления.Видимость = Отчет.ФормироватьУведомления;
	
	ИнициализироватьПараметрыТД(РезультатПретензии, "ПАРАМЕТРЫ_ПЕЧАТИ_ПРЕТЕНЗИЯ_АРЕНДА_"+Отчет.РежимФормирования);
	ИнициализироватьПараметрыТД(РезультатУведомления, "ПАРАМЕТРЫ_ПЕЧАТИ_УВЕДОМЛЕНИЕ_АРЕНДА_"+Отчет.РежимФормирования);
	
	Если Отчет.ФормироватьПретензии = Ложь и Отчет.ФормироватьУведомления = Ложь Тогда
		Возврат; 
	КонецЕсли; 
	
	Отбор = Новый Структура;
	Для каждого стрШапка Из Отчет.Задолженность Цикл
		Отбор.Вставить("Договор", стрШапка.Договор);
		ТЧ = Отчет.РасшифровкаЗадолженности.НайтиСтроки(Отбор);
		Если Отчет.ФормироватьУведомления Тогда
			СформироватьПретензию(РезультатУведомления, стрШапка, ТЧ, Истина);
			Элементы.Страницы.ТекущаяСтраница = Элементы.вклУведомления;
		КонецЕсли; 
		Если Отчет.ФормироватьПретензии Тогда
			СформироватьПретензию(РезультатПретензии, стрШапка, ТЧ, Ложь);
			Элементы.Страницы.ТекущаяСтраница = Элементы.вклПретензии;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметрыТД(ТабДок, ИмяПараметровПечати)
	
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.ИмяПараметровПечати	= ИмяПараметровПечати;
	ТабДок.Очистить();

КонецПроцедуры

&НаСервере
Процедура СформироватьПретензию(Результат, Шапка, ТЧ, ФормаУведомления)
	Если Результат.ВысотаТаблицы > 0 Тогда
		Результат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДетализацияПоУслугам = Ложь;
	
	Макет = Отчеты.ис_ФормированиеПретензийАренда.ПолучитьМакет("МакетПретензияУведомление");
	
	
	ДанныеКонтрагента = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Отчет.ДатаФормирования);
	ДанныеОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Отчет.ДатаФормирования);
	
	СтруктураЗаполненияПараметров = Новый Структура;
	
	#Область Шапка
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	СтруктураЗаполненияПараметров.Вставить("НазваниеОрганизации", ДанныеОрганизации.СокращенноеНаименование);
	СтруктураЗаполненияПараметров.Вставить("АдресОрганизации", ДанныеОрганизации.ЮридическийАдрес);
	
	МассивТелефоныФакс = Новый Массив;
	Если ЗначениеЗаполнено(ДанныеОрганизации.Телефоны) Тогда
		МассивТелефоныФакс.Добавить("Тел. "+ДанныеОрганизации.Телефоны);
	КонецЕсли; 
	Если ЗначениеЗаполнено(ДанныеОрганизации.Факс) Тогда
		МассивТелефоныФакс.Добавить("Факс: "+ДанныеОрганизации.Факс);
	КонецЕсли; 
	СтруктураЗаполненияПараметров.Вставить("ТелефоныОрганизации", СтрСоединить(МассивТелефоныФакс, ", "));
	
	СтруктураЗаполненияПараметров.Вставить("ИННОрганизации", ДанныеОрганизации.ИНН); 
	СтруктураЗаполненияПараметров.Вставить("КППОрганизации", ДанныеОрганизации.КПП);
	СтруктураЗаполненияПараметров.Вставить("РасчетныйСчет",  ДанныеОрганизации.НомерСчета);
	СтруктураЗаполненияПараметров.Вставить("БанкОрганизации", ДанныеОрганизации.Банк);
	СтруктураЗаполненияПараметров.Вставить("КСОрганизации", ДанныеОрганизации.КоррСчет);
	СтруктураЗаполненияПараметров.Вставить("БИКОрганизации", ДанныеОрганизации.БИК);
	СтруктураЗаполненияПараметров.Вставить("ИННКППОрганизации", ДанныеОрганизации.ИНН+"/"+ДанныеОрганизации.КПП);
	СтруктураЗаполненияПараметров.Вставить("ОГРНОрганизации", ДанныеОрганизации.ОГРН);
	
	ОрганизацияКомуСклонения = Новый Структура("ДательныйПадеж", "");
	СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставлениеПоВсемПадежам(
		ДанныеКонтрагента.ПолноеНаименование, 
		ОрганизацияКомуСклонения
	);
	
	СтруктураЗаполненияПараметров.Вставить("ОрганизацияКому", ОрганизацияКомуСклонения.ДательныйПадеж);
	СтруктураЗаполненияПараметров.Вставить("АдресКому", ДанныеКонтрагента.ЮридическийАдрес);
	
	ОбластьШапка.Параметры.Заполнить(СтруктураЗаполненияПараметров);
	Результат.Вывести(ОбластьШапка);
	#КонецОбласти 
	
	#Область Тело
	ДоговорСклонения = ис_АрендаВызовСервера.ПросклонятьНаименованиеДоговора(Шапка.Договор);
	СтруктураЗаполненияПараметров.Вставить("ДоговорДП", ДоговорСклонения.ДательныйПадеж);
	СтруктураЗаполненияПараметров.Вставить("ДоговорРП", ДоговорСклонения.РодительныйПадеж);
	
	Если ДанныеКонтрагента.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		КонтрагентСклонения = Неопределено;
		СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставлениеПоВсемПадежам(ДанныеКонтрагента.ПолноеНаименование, КонтрагентСклонения);
		КонтрагентТП = КонтрагентСклонения.ТворительныйПадеж;
	Иначе
		КонтрагентТП = ДанныеКонтрагента.СокращенноеНаименование;
	КонецЕсли; 
	СтруктураЗаполненияПараметров.Вставить("КонтрагентТП", КонтрагентТП);
	
	СтруктураЗаполненияПараметров.Вставить("ДатаЗадолженности", СтрШаблон(НСтр("ru='%1г.'"),Формат(Отчет.ДатаФормирования, "ДФ=dd.MM.yyyy")));
	
	СтавкиНДС = Новый Массив;
	Для каждого стрТЧ Из ТЧ Цикл
		Значение = Строка(стрТЧ.СтавкаНДС);
		Если СтавкиНДС.Найти(Значение) = Неопределено Тогда
			СтавкиНДС.Добавить(Значение);
		КонецЕсли; 
	КонецЦикла; 
	
	СтруктураЗаполненияПараметров.Вставить(
		"СуммаИтогоПрописьюНДС", 
		СтрШаблон(
			НСтр("ru='%1 (%2), %4%3'"),
			Формат(Шапка.СуммаЗадолженности, "ЧН="), 
			ЧислоПрописью(Шапка.СуммаЗадолженности, "Л=ru_RU", Шапка.ВалютаПараметрыПрописиНаРусском),
			СтрСоединить(СтавкиНДС,", "),
			?(СтавкиНДС.Количество() = 0 или СтавкиНДС.Количество() = 1 и СтавкиНДС[0] = Перечисления.СтавкиНДС.БезНДС,"", НСтр("ru='в том числе НДС '")) 
		)
	);
		
		ПериодыНеоплат = Новый Массив;
		ТаблицаПериодов = ББР_Коллекции.СоздатьТЗ("Дата1:Дата, Дата2:Дата");
		Для каждого стрТЧ Из ТЧ Цикл
			Значение = Строка(стрТЧ.СтавкаНДС);
			Если СтавкиНДС.Найти(Значение) = Неопределено Тогда
				СтавкиНДС.Добавить(Значение);
			КонецЕсли;
			
			СтрокаПериод = ТаблицаПериодов.Добавить();
			СтрокаПериод.Дата1 = НачалоМесяца(стрТЧ.Период);
			СтрокаПериод.Дата2 = КонецМесяца(стрТЧ.Период);
		КонецЦикла;
		
		ББР_ДатаВремяИнтервалыКлиентСервер.ОбъединитьПериоды(ТаблицаПериодов);
		
		СтруктураЗаполненияПараметров.Вставить("ПериодыНеоплат", ББР_ДатаВремяИнтервалыКлиентСервер.ПредставлениеПериодов(ТаблицаПериодов));
		СтруктураЗаполненияПараметров.Вставить("СрокДо", Формат(Отчет.СрокДо, "ДФ=dd.MM.yyyy"));
		
	Если ФормаУведомления = Ложь Тогда
		ОбластьТело = Макет.ПолучитьОбласть("ТелоПретензия1"+?(ДетализацияПоУслугам,"Детально",""));
	Иначе
		ОбластьТело = Макет.ПолучитьОбласть("ТелоУведомление");
	КонецЕсли;
	
	ОбластьТело.Параметры.Заполнить(СтруктураЗаполненияПараметров);
	Результат.Вывести(ОбластьТело);
	
	Если ФормаУведомления = Ложь Тогда
		#Область ДеталиЗадолженности
		Если ДетализацияПоУслугам = Истина Тогда
			ОбластьДеталиЗадолженности = Макет.ПолучитьОбласть("ДеталиЗадолженности");
			НомерСтроки = 0;
			КоличествоСтрок = ТЧ.Количество();
			Для каждого стрТЧ Из ТЧ Цикл
				НомерСтроки = НомерСтроки + 1;
				ОбластьДеталиЗадолженности.Параметры.ТекстПункта = СтрШаблон(
					НСтр("ru='%6) %1 за %2 в сумме %3 (%4), %8%5%7'"),
					стрТЧ.Услуга,
					ПредставлениеПериода(НачалоМесяца(стрТЧ.Период), КонецМесяца(стрТЧ.Период)),
					Формат(стрТЧ.СуммаЗадолженности, "ЧН="),
					ЧислоПрописью(Шапка.СуммаЗадолженности, "Л=ru_RU", Шапка.ВалютаПараметрыПрописиНаРусском),
					Строка(стрТЧ.СтавкаНДС),
					Формат(НомерСтроки, "ЧН=; ЧВН="),
					?(НомерСтроки < КоличествоСтрок,";","."),
					?(стрТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС, "", НСтр("ru='в том числе НДС '"))
				);
				
				Результат.Вывести(ОбластьДеталиЗадолженности);
			КонецЦикла; 
		КонецЕсли; 
		#КонецОбласти 
		
		ОбластьТелоПретензия2 = Макет.ПолучитьОбласть("ТелоПретензия2");
		ОбластьТелоПретензия2.Параметры.Заполнить(СтруктураЗаполненияПараметров);
		Результат.Вывести(ОбластьТелоПретензия2);
	КонецЕсли;
	#КонецОбласти
	
	#Область Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Отчет.ДатаФормирования);
	СтруктураЗаполненияПараметров.Вставить("РуководительДолжность", ОтветственныеЛица.РуководительДолжностьПредставление);
	СтруктураЗаполненияПараметров.Вставить("РуководительФИО", ОтветственныеЛица.РуководительПредставление);
	
	ОбластьПодвал.Параметры.Заполнить(СтруктураЗаполненияПараметров);
	Результат.Вывести(ОбластьПодвал);
	#КонецОбласти 
	
	Результат.НижнийКолонтитул.ТекстСлева = 
		СтрШаблон(НСтр("ru='Исполнитель: %1'"), ОбщегоНазначенияБПВызовСервера.ДанныеФизЛицаТекущегоПользователя(Шапка.Организация, Отчет.ДатаФормирования, Истина))+
		Символы.ПС+
		СтрШаблон(
			НСтр("ru='Тел. %1'"), 
			УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
				Пользователи.ТекущийПользователь(), 
				Справочники.ВидыКонтактнойИнформации.ТелефонПользователя, 
				Отчет.ДатаФормирования
			)
		);
		
		
		
КонецПроцедуры
                                                      

 